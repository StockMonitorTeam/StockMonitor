package stockmonitoringbot.messengerservices.markups

import stockmonitoringbot.datastorage.models._
import stockmonitoringbot.stockpriceservices.{CurrencyExchangeRateInfo, StockInfo}

object GeneralTexts {

  val INTRO_MESSAGE =
    """StockMon –±–æ—Ç —É–º–µ–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–∫—Ü–∏–∏ÃÜ, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∞–º —Å–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –æ—Ç—á–µÃà—Ç–æ–≤ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–∏ÃÜ –ø—Ä–∏ —Ä–æ—Å—Ç–µ –∏ –ø–∞–¥–µ–Ω–∏–∏ –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞.
      |
      |–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –ø–∞–Ω–µ–ª–∏ –º–µ–Ω—é –±–æ—Ç–∞.
    """.stripMargin

  val MAIN_MENU_GREETING = "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –ø–∞–Ω–µ–ª–∏ –º–µ–Ω—é –±–æ—Ç–∞."

  val STOCK_INTRO_MESSAGE =
    """–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–∫—Ü–∏–∏ÃÜ –≤–≤–µ–¥–∏—Ç–µ –µ–µÃà —Ç–∏–∫–µ—Ä –∫–∞–∫ —Ç–µ–∫—Å—Ç (YNDX) –∏–ª–∏ –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É (/YNDX).
      |
      |–ü—Ä–∏–º–µ—Ä—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–∏–∫–µ—Ä–æ–≤:
      |/AMZN ‚Äì Amazon, Inc
      |/GAZP ‚Äì Gazprom PAO
      |/YNDX ‚Äì Yandex N.V
      |/AAPL ‚Äì Apple Inc.
      |
      |–ë–æ–ª—å—à–µ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–∏–∫–µ—Ä–æ–≤ –ø–æ –∞–¥—Ä–µ—Å—É https://goo.gl/s7pnNS
    """.stripMargin

  val EXCHANGE_RATE_INTRO_MESSAGE =
    """–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ –≤–∞–ª—é—Ç –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É —á–µ—Ä–µ–∑ "/".
      |
      |–ù–∞–ø—Ä–∏–º–µ—Ä: USD/RUB
      |
    """.stripMargin

  val EXCHANGE_RATE_INVALID = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É"

  val SETTINGS_INTRO_MESSAGE =
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
      |
    """.stripMargin

  val INFO_MESSAGE =
    """–û –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö –ø–∏—à–∏—Ç–µ –Ω–∞ —ç—Ç–æ—Ç email: XXXXXXXXXX.
      |–î–∞–Ω–Ω—ã–µ –≤–∑—è—Ç—ã —Å —Å–∞–π—Ç–∞: https://www.alphavantage.co/
      |
    """.stripMargin

  val printStockPrice = (name: String, price: Double,
                         triggerNot: Seq[TriggerNotification],
                         dailyNot: Option[DailyNotification]) => {
    val dailyNotStr = dailyNot.fold("–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ") { not =>
      s"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ $name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: ${not.time}"
    }
    s"""–ê–∫—Ü–∏–∏ $name
       |–°—Ç–æ–∏–º–æ—Å—Ç—å: $price
       |–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://www.marketwatch.com/investing/stock/$name
       |
       |–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è —Ç—Ä–∏–≥–µ—Ä—ã –Ω–∞ $name:
       |${triggerNot.map(tnToStr).mkString("\n")}
       |
       |$dailyNotStr
    """.stripMargin
  }

  val printExchangeRate = (rate: CurrencyExchangeRateInfo,
                           triggerNot: Seq[TriggerNotification],
                           dailyNot: Option[DailyNotification]) => {
    val dailyNotStr = dailyNot.fold("–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ") { not =>
      s"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –∫—É—Ä—Å–µ ${rate.from}/${rate.to} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: ${not.time}"
    }
    s"""–ö—É—Ä—Å ${rate.from} –∫ ${rate.to} —Ä–∞–≤–µ–Ω ${rate.rate}
       |
       |–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è —Ç—Ä–∏–≥–µ—Ä—ã –Ω–∞ –∫—É—Ä—Å ${rate.from}/${rate.to}:
       |${triggerNot.map(tnToStr).mkString("\n")}
       |
       |$dailyNotStr
     """.stripMargin
  }

  val printStockException = (name: String) =>
    s"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫—Ü–∏–∏: $name üòî"

  val printExchangeRateException = (from: String, to: String) =>
    s"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ: $from/$to üòî"

  val UNIMPLEMENTED = "–í —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞. üòå"

  val PORTFOLIO_HELLO = "–ü–æ—Ä—Ç—Ñ–µ–ª—å ‚Äì —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∞–∫—Ü–∏–∏ÃÜ. –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å—É–º–º–∞—Ä–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –∞–∫—Ü–∏–π –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è."

  val PORTFOLIO_GREETING = (portfolios: String) =>
    s"""–ü–æ—Ä—Ç—Ñ–µ–ª—å ‚Äì —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∞–∫—Ü–∏–∏ÃÜ. –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å—É–º–º–∞—Ä–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –∞–∫—Ü–∏–π –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è.
       |
       |–í–∞—à–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏:
       |$portfolios
    """.stripMargin

  val PORTFOLIO_LIST = "–í–∞—à–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏:"

  val NO_PORTFOLIO_GREETING =
    s"""–ü–æ—Ä—Ç—Ñ–µ–ª—å ‚Äì —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∞–∫—Ü–∏–∏ÃÜ. –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å—É–º–º–∞—Ä–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –∞–∫—Ü–∏–π –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è.
       |
       |–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç ¬´–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å¬ª –≤ –º–µ–Ω—é –±–æ—Ç–∞
    """.stripMargin

  val INPUT_PORTFOLIO_NAME = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è (–õ–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã)"
  val INPUT_PORTFOLIO_NAME_INVALID = "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã," +
    " —Ü–∏—Ñ—Ä—ã –∏–ª–∏ –∑–Ω–∞–∫–∏ —Ç–∏—Ä–µ, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è, –ø—Ä–æ–±–µ–ª. –ù–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤."
  val INPUT_PORTFOLIO_NAME_EXISTS = "–£ –≤–∞—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ."
  val INPUT_PORTFOLIO_CURRENCY = (name: String) =>
    s"–í–≤–µ–¥–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –ø–æ—Ä—Ç—Ñ–µ–ª—è ¬´$name¬ª."
  val INPUT_PORTFOLIO_CURRENCY_LIST = "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞"
  val INPUT_PORTFOLIO_CURRENCY_INVALID = "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞–ª—é—Ç: USD, EUR, RUB"
  val INPUT_PORTFOLIO_CREATED = (name: String, currency: String) =>
    s"–ü–æ—Ä—Ç—Ñ–µ–ª—å ¬´$name¬ª —Å –≤–∞–ª—é—Ç–æ–π $currency —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω."
  val PORTFOLIO_CREATE_ERROR = s"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è üòê"

  val PORTFOLIO_SHOW = (portfolio: Portfolio, price: BigDecimal) =>
    s"""–ü–æ—Ä—Ç—Ñ–µ–ª—å ¬´${portfolio.name}¬ª
       |–í–∞–ª—é—Ç–∞: ${portfolio.currency}
       |–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è: ${price}
       |""".stripMargin

  val PORTFOLIO_SHOW_STOCK = "–ê–∫—Ü–∏–∏ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ:\n"

  val PORTFOLIO_STOCK_ADD = (name: String) =>
    s"""–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–∏ÃÜ –∞–∫—Ü–∏–∏ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å ¬´${name}¬ª –≤–≤–µ–¥–∏—Ç–µ –µ–µÃà —Ç–∏–∫–µ—Ä –∫–∞–∫ —Ç–µ–∫—Å—Ç (YNDX) –∏–ª–∏ –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É (/YNDX).
       |
      |–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã —Å –≤–∞–ª—é—Ç–æ–∏ÃÜ, –≤ –∫–æ—Ç–æ—Ä–æ–∏ÃÜ —Ç–æ—Ä–≥—É–µ—Ç—Å—è –¥–∞–Ω–Ω–∞—è –∞–∫—Ü–∏—è. –ú—ã –ø–æ–∫–∞ –Ω–µ —É–º–µ–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –µ–µÃà –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Ä—Ç—Ñ–µ–ª–µ–∏ÃÜ –¥–ª—è –∞–∫—Ü–∏–∏ÃÜ, —Ç–æ—Ä–≥—É–µ–º—ã—Ö –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö.
    """.stripMargin

  val PORTFOLIO_STOCK_ADD_ERROR = s"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ü–∏–∏ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å"

  val PORTFOLIO_STOCK_ADD_QUERY = s"–î–∞–Ω–Ω—ã–π —Ç–∏–∫–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—Ä–æ—Å–∏—Ç—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ üòå"

  val PORTFOLIO_STOCK_ADD_AMOUNT = (ticker: String, portfolioName: String) =>
    s"–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è $ticker –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å ¬´$portfolioName¬ª –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–∏ÃÜ. –ù–∞–ø—Ä–∏–º–µ—Ä: 1 –∏–ª–∏ 0.03"

  val DAILY_NOTIFICATION_ADD_INFO_INTRO = (assetType: AssetType) => {
    val asset = assetType match {
      case PortfolioAsset(name) => s"—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è $name"
      case StockAsset(name) => s"—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–∫—Ü–∏–π $name"
      case ExchangeRateAsset(from, to) => s"–∫—É—Ä—Å–µ –≤–∞–ª—é—Ç $from/$to"
    }
    s"–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ $asset –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è, –ª–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM."
  }

  val DAILY_NOTIFICATION_ADD_INFO = (notification: Option[DailyNotification]) => {
    s"""
      |–ù–∞ —Ç–µ–∫—É—â–∏–∏ÃÜ –º–æ–º–µ–Ω—Ç —É –≤–∞—Å """.stripMargin +
      (notification match {
        case Some(x) => s"—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –Ω–∞ ${x.time.toString}"
        case None => "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ–ø–æ–≤–µ—â–µ–Ω–∏—è"
      })
  }

  val DAILY_NOTIFICATION_SET = (time: String) => s"–û–ø–æ–≤–µ—â–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${time}"

  val DAILY_NOTIFICATION_UNSET = "–û–ø–æ–≤–µ—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã"

  val PORTFOLIO_STOCK_DELETE = (name: String) => s"–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫—Ü–∏–∏ –∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è ¬´${name}¬ª –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É"

  val PORTFOLIO_STOCK_DELETE_SUCCESS = (stock: String, name: String) => s"–ê–∫—Ü–∏—è ${stock} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è ¬´${name}¬ª"

  val PORTFOLIO_STOCK_DELETE_FAIL = (stock: String, name: String) => s"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∞–∫—Ü–∏—é ${stock} –∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è ¬´${name}¬ª"

  val PORTFOLIO_STOCK_EMPTY = (name: String) => s"–í –ø–æ—Ä—Ç—Ñ–µ–ª–µ ${name} –Ω–µ—Ç –∞–∫—Ü–∏–π"

  val TIME_ERROR = "–ù–µ–≤–µ—Ä–Ω–æ –∑–∞–¥–∞–Ω —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏"

  val ERROR = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üôÅ. –ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã, –µ—Å–ª–∏ –≤—ã —Å–æ–æ–±—â–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º."

  val PORTFOLIO_TRIGGERS = (name: String, price: BigDecimal) =>
    s"""–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ —Ä–µ–∑–∫–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è ¬´${name}¬ª –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–∏ÃÜ –≤–∞—Å –ø–æ—Ä–æ–≥.
       |
      |–¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è ‚ûî ${price}
       |
      |–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ–ø–æ–≤–µ—â–µ–Ω–∏—è:
       |""".stripMargin

  val PORTFOLIO_TRIGGERS_LIST = (triggers: Seq[TriggerNotification]) => triggers match {
    case Nil => """
                  |–Ω–∏ –æ–¥–Ω–æ–≥–æ ü§®
                """.stripMargin
    case xList => xList map (x => s"üîà –Ω–∞ ${x.boundPrice} (${x.notificationType})") mkString "\n"
  }

  val TRIGGERS_LIST = (triggers: Seq[TriggerNotification]) => "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∏–≥–µ—Ä—ã: \n" + (triggers match {
    case Seq() => """
                    |–ù–∏ –æ–¥–Ω–æ–≥–æ.
                  """.stripMargin
    case xList => xList.map(tnToStr).mkString("\n")
  })

  val DAILY_NOTIFICATIONS_LIST = (not: Seq[DailyNotification]) => "–í–∞—à–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è: \n" + (not match {
    case Seq() => """
                    |–ù–∏ –æ–¥–Ω–æ–≥–æ.
                  """.stripMargin
    case xList => xList.map(dnToStr).mkString("\n")
  })

  val TRIGGER_TEXT_ACTIVE = "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∏–≥–µ—Ä—ã:"

  val PORTFOLIO_TRIGGER_REMOVE = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å"

  val TRIGGER_REMOVE = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å"

  val DAILY_NOTIFICATION_REMOVE = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å"

  val DAILY_NOTIFICATION_TEXT_ACTIVE = "–í–∞—à–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è:"

  val PORTFOLIO_TRIGGER_EMPTY = "–°–ø–∏—Å–æ–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –ø—É—Å—Ç üì≠"

  val TRIGGER_TYPE = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –ø—Ä–∏ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–∏ –ø–æ—Ä–æ–≥–∞"

  val TRIGGER_TYPE_MORE = "–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞, –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–¥—ä–µ–º–µ –∏–ª–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ü–µ–Ω—ã –ø–æ—Ä—Ç—Ñ–µ–ª—è –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è"

  val TRIGGER_BOUND = "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä–æ–≥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä: 1 –∏–ª–∏ 133.7"

  val TRIGGER_ADDED = "–¢—Ä–∏–≥–≥–µ—Ä —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

  val TRIGGER_ADD_ERROR = "–¢—Ä–∏–≥–≥–µ—Ä —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

  val PORTFOLIO_TRIGGER_REMOVED = (name: String) => s"–¢—Ä–∏–≥–≥–µ—Ä ${name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω"

  val TRIGGER_REMOVED = s"–¢—Ä–∏–≥–≥–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω"

  val DAILY_NOTIFICATION_REMOVED = s"–¢—Ä–∏–≥–≥–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω"

  val DAILY_NOTIFICATION_STOCK_INFO = (stockInfo: StockInfo) => s"–¶–µ–Ω–∞ –∞–∫—Ü–∏–∏ ${stockInfo.name} : ${stockInfo.price}(–æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${stockInfo.lastRefreshed})"

  val DAILY_NOTIFICATION_EXCHANGE_RATE_INFO = (exchangeRateInfo: CurrencyExchangeRateInfo) => s"–¶–µ–Ω–∞ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã ${exchangeRateInfo.from}/${exchangeRateInfo.to} : ${exchangeRateInfo.rate}" +
    s"(–æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${exchangeRateInfo.lastRefreshed})" +
    s"\n ${exchangeRateInfo.from} - ${exchangeRateInfo.descriptionFrom}" +
    s"\n ${exchangeRateInfo.to} - ${exchangeRateInfo.descriptionTo}"

  val DAILY_NOTIFICATION_PORTFOLIO_INFO = (name: String, price: BigDecimal) => s"–¶–µ–Ω–∞ –≤–∞—à–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è ¬´$name¬ª : $price"

  val TRIGGER_MESSAGE_BOUND = (tp: TriggerNotificationType, bound: BigDecimal) => tp match {
    case RaiseNotification =>
      s"–ø–æ–¥–Ω—è–ª–∞—Å—å –≤—ã—à–µ $bound"
    case FallNotification =>
      s"–æ–ø—É—Å—Ç–∏–ª–∞—Å—å –Ω–∏–∂–µ $bound"
    case BothNotification =>
      s"–¥–æ—Å—Ç–∏–≥–ª–∞ –ø–æ—Ä–æ–≥–∞: $bound"
  }

  val TRIGGER_MESSAGE = (notification: TriggerNotification, price: BigDecimal) => notification match {
    case StockTriggerNotification(_, stock, bound, notificationType) =>
      val msg = TRIGGER_MESSAGE_BOUND(notificationType, bound)
      s"–°—Ä–∞–±–æ—Ç–∞–ª–æ —Ç—Ä–∏–≥–≥–µ—Ä –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ! –°—Ç–æ–∏–º–æ—Å—Ç—å $stock $msg. –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ $price"
    case ExchangeRateTriggerNotification(_, (from, to), bound, notificationType) =>
      val msg = TRIGGER_MESSAGE_BOUND(notificationType, bound)
      s"–°—Ä–∞–±–æ—Ç–∞–ª–æ —Ç—Ä–∏–≥–≥–µ—Ä –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ! –¶–µ–Ω–∞ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã $from/$to $msg. –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: $price"
    case PortfolioTriggerNotification(_, portfolioName, bound, notificationType) =>
      val msg = TRIGGER_MESSAGE_BOUND(notificationType, bound)
      s"–°—Ä–∞–±–æ—Ç–∞–ª–æ —Ç—Ä–∏–≥–≥–µ—Ä –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ! –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç–µ–ª—è ¬´$portfolioName¬ª $msg. –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: $price"
  }


}